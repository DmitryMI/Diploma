Слайд 1 (Титульный):
	Здравствуйте, уважаемая комиссия, хочу представить вам свой проект (без названия)

Слайд 2 (Акутальность):
	Системы поиска кратчайшего пути находят применение в разных сферах. Наиболее известное из них - 
	логистика. Без таких алгоритмов не обойтись, когда необходимо проложить наиболее выгодный транспортый маршрут.
	Другим интересным приложением является военная система TERCOM, которая используется для наведения крылатых ракет
	
Слайд 3 (Цель и задачи):
	<Зачитать цель, задачи не зачитывать>
	
Слайд 4 (Таблица сравнения):
	Выбирая наиболее подходящий для дальнейшей модификации алгоритм, я сформулировал два критерия выбора: количество 
	рассматриваемых точек и точность. Точностью называется отклонение результата от кратчайшего. По сформулированным
	критериям, был выбран алгоритм HPA*.

Слайд 5 (ДРП):
	Перед тем, как рассказать о HPA*, наобходимо ввести понятие ДРП. ДРП - это матрица ячеек, сконструированная на
	основе векторных данных геометрии электронной карты местности. Каждая ячейка хранит информацию о проходимости.
	После получения ДРП, оно может подвергаться дальнейшим преобразованиям. Например, можно построить граф из проходимых
	ячеек.
	
Слайд 6 (HPA*):
	Алгоритм HPA* перед началом своей работы проводит анализ ДРП и построение иерархического графа. IDEF0 диаграмма
	иллюстрирует этот процесс. Три изображения слева являются визуализацией этих этапов. Сначала карта разбивается на 
	кластеры. Между кластерами находятся переходные ячейки. Эти ячейки формируют иерархический граф, в котором весами рёбер
	будут является кратчайшие расстояния между переходами внутри кластера.

Слайд 7 (варианты модификации)
	Слева представлена универсальная модификация, позволяющая задать опасный фрагмент карты. Она подходит для любого алгоритма, но не является эффективной, т.к. требует повторного анализа ДРП. Улучшенная модификация основывается 
	на принципе работы алгроритма HPA*. Она изменяет не исходное ДРП, а предвычисленный иерархический граф. Таким образом, нет необходимости заново перестраивать весь иерархический граф.
	
Слайд 8 (иллюстрация)
	На данном слайде представлена визуализация работы этой модификации. При добавлении нового непроходимого участка, граф в затронутых кластерах перестраивается, а путь проходит уже по другим ячейкам.
	
Слайд 9 (уровни абстракции)
	Здесь я представил упрощенную схему уровней абстракции программного проекта. Программа спроектирована так, что
	при изменении реализации на любом уровне, программа будет продолжать корректно работать. Например, можно заменить
	HPA* на A*. Применить рассмотренную модификацию уже не получится, однако это дает возможность сравнивать разные алгоритмы, а также открывает потенциал для дальнейшего развития.

Слайд 10 (эксперимент)
	В ходе работы над проектом были реализованы все алгоритмы, представленные в сравнительной таблице. Дополнительно к основной программе, была разработана программа для тестирования и сравнения алгоритмов. С помощью этой программы были выявлены особенности работы этих алгоритмов. Одно из наиболее примечательных явлений - ситуация ловушки. Алгоритм "лучший - первый" именно по этой причине не был выбран для модификации. Все остальные алгоритмы данную ситуацию избегают.
	Второе изображение показывает разницу в количестве рассмотренных точек между алгоритмом A* и алгоритмами поиска в ширину. A* (слева) не стремится рассмотреть все точки ДРП, что значительно повышает его эффективность.

Слайд 11 (Заключение)
	Все поставленные задачи были выполнены.
	К достоинствам проекта я отношу высокий потенциал для модификации за счет хорошего проектирования. Также стоит отметить	неплохое быстродействие.
	К недостаткам я бы отнес отсутствие возможности загружать картографические данные в автоматическом режиме.
	Я вижу следующие пути развития:

	Адаптация программы для использования графа дорог
	Кэширование данных HPA*
	Исследование других алгоритмов поиска кратчайшего пути
